<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="17" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-24T12:58:23 WIB" name="OrangeHRM Automation Suite" finished-at="2025-08-24T13:02:48 WIB" duration-ms="264566">
    <groups>
    </groups>
    <test started-at="2025-08-24T12:58:23 WIB" name="Dashboard-Section-Test" finished-at="2025-08-24T13:00:20 WIB" duration-ms="117028">
      <class name="com.example.java.testcases.DashboardTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:23 WIB" name="setUp" finished-at="2025-08-24T12:58:35 WIB" duration-ms="12178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickAdminButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:35 WIB" name="setUpDashboardPage" finished-at="2025-08-24T12:58:37 WIB" duration-ms="1913" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickAdminButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:37 WIB" name="testClickAdminButton" description="Verify clicking Admin button" finished-at="2025-08-24T12:58:40 WIB" duration-ms="2971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickAdminButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:41 WIB" name="tearDown" finished-at="2025-08-24T12:58:41 WIB" duration-ms="773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickAdminButton status=SUCCESS method=DashboardTest.testClickAdminButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:41 WIB" name="setUp" finished-at="2025-08-24T12:58:49 WIB" duration-ms="8008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickDirectoryButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:49 WIB" name="setUpDashboardPage" finished-at="2025-08-24T12:58:51 WIB" duration-ms="1411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickDirectoryButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:51 WIB" name="testClickDirectoryButton" description="Verify clicking Directory button" finished-at="2025-08-24T12:58:53 WIB" duration-ms="2604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickDirectoryButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:54 WIB" name="tearDown" finished-at="2025-08-24T12:58:54 WIB" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickDirectoryButton status=SUCCESS method=DashboardTest.testClickDirectoryButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:58:54 WIB" name="setUp" finished-at="2025-08-24T12:59:02 WIB" duration-ms="7893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickLeaveButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:02 WIB" name="setUpDashboardPage" finished-at="2025-08-24T12:59:03 WIB" duration-ms="1509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickLeaveButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:03 WIB" name="testClickLeaveButton" description="Verify clicking Leave button" finished-at="2025-08-24T12:59:05 WIB" duration-ms="1836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickLeaveButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:05 WIB" name="tearDown" finished-at="2025-08-24T12:59:06 WIB" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickLeaveButton status=SUCCESS method=DashboardTest.testClickLeaveButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:06 WIB" name="setUp" finished-at="2025-08-24T12:59:14 WIB" duration-ms="8498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickMyInfoButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:14 WIB" name="setUpDashboardPage" finished-at="2025-08-24T12:59:16 WIB" duration-ms="1647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickMyInfoButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:16 WIB" name="testClickMyInfoButton" description="Verify clicking My Info button" finished-at="2025-08-24T12:59:17 WIB" duration-ms="1601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickMyInfoButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:18 WIB" name="tearDown" finished-at="2025-08-24T12:59:18 WIB" duration-ms="520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickMyInfoButton status=SUCCESS method=DashboardTest.testClickMyInfoButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:18 WIB" name="setUp" finished-at="2025-08-24T12:59:28 WIB" duration-ms="9812" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickPIMButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:28 WIB" name="setUpDashboardPage" finished-at="2025-08-24T12:59:30 WIB" duration-ms="1551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickPIMButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:30 WIB" name="testClickPIMButton" description="Verify clicking PIM button" finished-at="2025-08-24T12:59:31 WIB" duration-ms="1579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickPIMButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:31 WIB" name="tearDown" finished-at="2025-08-24T12:59:32 WIB" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickPIMButton status=SUCCESS method=DashboardTest.testClickPIMButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:32 WIB" name="setUp" finished-at="2025-08-24T12:59:41 WIB" duration-ms="9544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickPerformanceButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:41 WIB" name="setUpDashboardPage" finished-at="2025-08-24T12:59:43 WIB" duration-ms="1671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickPerformanceButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:43 WIB" name="testClickPerformanceButton" description="Verify clicking Performance button" finished-at="2025-08-24T12:59:45 WIB" duration-ms="1576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickPerformanceButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:45 WIB" name="tearDown" finished-at="2025-08-24T12:59:45 WIB" duration-ms="355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickPerformanceButton status=SUCCESS method=DashboardTest.testClickPerformanceButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:45 WIB" name="setUp" finished-at="2025-08-24T12:59:55 WIB" duration-ms="9833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickRecruitmentButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:55 WIB" name="setUpDashboardPage" finished-at="2025-08-24T12:59:57 WIB" duration-ms="1672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickRecruitmentButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:57 WIB" name="testClickRecruitmentButton" description="Verify clicking Recruitment button" finished-at="2025-08-24T12:59:58 WIB" duration-ms="1576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickRecruitmentButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:58 WIB" name="tearDown" finished-at="2025-08-24T12:59:59 WIB" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickRecruitmentButton status=SUCCESS method=DashboardTest.testClickRecruitmentButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T12:59:59 WIB" name="setUp" finished-at="2025-08-24T13:00:10 WIB" duration-ms="11237" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testClickTimeButton()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=139.0.7258.128)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.28'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce2bd4ffccd27fba5680e671be67e53a, findElement {using=css selector, value=input[placeholder='Username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.128, chrome: {chromedriverVersion: 139.0.7258.138 (884e54ea8d4..., userDataDir: C:\Users\62812\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50499}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50499/devtoo..., se:cdpVersion: 139.0.7258.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ce2bd4ffccd27fba5680e671be67e53a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=139.0.7258.128)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.28'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce2bd4ffccd27fba5680e671be67e53a, findElement {using=css selector, value=input[placeholder='Username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.128, chrome: {chromedriverVersion: 139.0.7258.138 (884e54ea8d4..., userDataDir: C:\Users\62812\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50499}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50499/devtoo..., se:cdpVersion: 139.0.7258.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ce2bd4ffccd27fba5680e671be67e53a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:194)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:190)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at com.example.java.page.LoginPage.navigateToLogin(LoginPage.java:30)
at com.example.java.base.BaseTest.loginAsAdmin(BaseTest.java:110)
at com.example.java.base.BaseTest.setUp(BaseTest.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T13:00:10 WIB" name="setUpDashboardPage" finished-at="2025-08-24T13:00:10 WIB" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testClickTimeButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T13:00:10 WIB" name="testClickTimeButton" description="Verify clicking Time button" finished-at="2025-08-24T13:00:10 WIB" duration-ms="1" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=139.0.7258.128)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.28'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce2bd4ffccd27fba5680e671be67e53a, findElement {using=css selector, value=input[placeholder='Username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.128, chrome: {chromedriverVersion: 139.0.7258.138 (884e54ea8d4..., userDataDir: C:\Users\62812\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50499}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50499/devtoo..., se:cdpVersion: 139.0.7258.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ce2bd4ffccd27fba5680e671be67e53a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=139.0.7258.128)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.28'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce2bd4ffccd27fba5680e671be67e53a, findElement {using=css selector, value=input[placeholder='Username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.128, chrome: {chromedriverVersion: 139.0.7258.138 (884e54ea8d4..., userDataDir: C:\Users\62812\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50499}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50499/devtoo..., se:cdpVersion: 139.0.7258.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ce2bd4ffccd27fba5680e671be67e53a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:194)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:190)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at com.example.java.page.LoginPage.navigateToLogin(LoginPage.java:30)
at com.example.java.base.BaseTest.loginAsAdmin(BaseTest.java:110)
at com.example.java.base.BaseTest.setUp(BaseTest.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickTimeButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T13:00:10 WIB" name="tearDown" finished-at="2025-08-24T13:00:10 WIB" duration-ms="82" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickTimeButton status=SKIP method=DashboardTest.testClickTimeButton()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T13:00:10 WIB" name="setUp" finished-at="2025-08-24T13:00:19 WIB" duration-ms="9006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.DashboardTest.testNavigateToDashboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpDashboardPage()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T13:00:19 WIB" name="setUpDashboardPage" finished-at="2025-08-24T13:00:19 WIB" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDashboardPage -->
        <test-method signature="testNavigateToDashboard()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T13:00:19 WIB" name="testNavigateToDashboard" description="Verify navigation to Dashboard page" finished-at="2025-08-24T13:00:19 WIB" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=139.0.7258.128)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.28'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce2bd4ffccd27fba5680e671be67e53a, findElement {using=css selector, value=input[placeholder='Username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.128, chrome: {chromedriverVersion: 139.0.7258.138 (884e54ea8d4..., userDataDir: C:\Users\62812\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50499}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50499/devtoo..., se:cdpVersion: 139.0.7258.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ce2bd4ffccd27fba5680e671be67e53a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id: session deleted as the browser has closed the connection
from disconnected: unable to send message to renderer
  (Session info: chrome=139.0.7258.128)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.28'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ce2bd4ffccd27fba5680e671be67e53a, findElement {using=css selector, value=input[placeholder='Username']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.128, chrome: {chromedriverVersion: 139.0.7258.138 (884e54ea8d4..., userDataDir: C:\Users\62812\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50499}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50499/devtoo..., se:cdpVersion: 139.0.7258.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ce2bd4ffccd27fba5680e671be67e53a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:380)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:194)
at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:190)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at com.example.java.page.LoginPage.navigateToLogin(LoginPage.java:30)
at com.example.java.base.BaseTest.loginAsAdmin(BaseTest.java:110)
at com.example.java.base.BaseTest.setUp(BaseTest.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigateToDashboard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df]" started-at="2025-08-24T13:00:19 WIB" name="tearDown" finished-at="2025-08-24T13:00:20 WIB" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigateToDashboard status=SKIP method=DashboardTest.testNavigateToDashboard()[pri:0, instance:com.example.java.testcases.DashboardTest@600b90df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.example.java.testcases.DashboardTest -->
    </test> <!-- Dashboard-Section-Test -->
    <test started-at="2025-08-24T13:00:20 WIB" name="Login-Section-Test " finished-at="2025-08-24T13:01:23 WIB" duration-ms="63147">
      <class name="com.example.java.testcases.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:20 WIB" name="setUp" finished-at="2025-08-24T13:00:22 WIB" duration-ms="1501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.LoginTest.testEmptyFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEmptyFields()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:22 WIB" name="testEmptyFields" description="Login with empty username and password" finished-at="2025-08-24T13:00:26 WIB" duration-ms="4670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFields -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:26 WIB" name="tearDown" finished-at="2025-08-24T13:00:27 WIB" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyFields status=SUCCESS method=LoginTest.testEmptyFields()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:27 WIB" name="setUp" finished-at="2025-08-24T13:00:29 WIB" duration-ms="1700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.LoginTest.testEmptyFieldsPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEmptyFieldsPassword()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:29 WIB" name="testEmptyFieldsPassword" description="Login with empty username" finished-at="2025-08-24T13:00:34 WIB" duration-ms="5713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFieldsPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:34 WIB" name="tearDown" finished-at="2025-08-24T13:00:35 WIB" duration-ms="565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyFieldsPassword status=SUCCESS method=LoginTest.testEmptyFieldsPassword()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:35 WIB" name="setUp" finished-at="2025-08-24T13:00:37 WIB" duration-ms="1693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.LoginTest.testEmptyFieldsUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEmptyFieldsUsername()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:37 WIB" name="testEmptyFieldsUsername" description="Login with empty username" finished-at="2025-08-24T13:00:41 WIB" duration-ms="4394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFieldsUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:41 WIB" name="tearDown" finished-at="2025-08-24T13:00:42 WIB" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyFieldsUsername status=SUCCESS method=LoginTest.testEmptyFieldsUsername()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:42 WIB" name="setUp" finished-at="2025-08-24T13:00:43 WIB" duration-ms="1613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.LoginTest.testInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidPassword()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:43 WIB" name="testInvalidPassword" description="Login with invalid password" finished-at="2025-08-24T13:00:52 WIB" duration-ms="8558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:52 WIB" name="tearDown" finished-at="2025-08-24T13:00:52 WIB" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidPassword status=SUCCESS method=LoginTest.testInvalidPassword()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:52 WIB" name="setUp" finished-at="2025-08-24T13:00:54 WIB" duration-ms="1559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.LoginTest.testInvalidUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidUsername()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:00:54 WIB" name="testInvalidUsername" description="Login with invalid username" finished-at="2025-08-24T13:01:01 WIB" duration-ms="7535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:01:02 WIB" name="tearDown" finished-at="2025-08-24T13:01:02 WIB" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidUsername status=SUCCESS method=LoginTest.testInvalidUsername()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:01:02 WIB" name="setUp" finished-at="2025-08-24T13:01:04 WIB" duration-ms="1493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.LoginTest.testValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidLogin()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:01:04 WIB" name="testValidLogin" description="Verify login works with valid credentials" finished-at="2025-08-24T13:01:09 WIB" duration-ms="5751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:01:10 WIB" name="tearDown" finished-at="2025-08-24T13:01:10 WIB" duration-ms="528" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=LoginTest.testValidLogin()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:01:10 WIB" name="setUp" finished-at="2025-08-24T13:01:12 WIB" duration-ms="1687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.LoginTest.userLogout()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="userLogout()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:01:12 WIB" name="userLogout" description="verify that user can log out succesfully" finished-at="2025-08-24T13:01:23 WIB" duration-ms="10574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogout -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72]" started-at="2025-08-24T13:01:23 WIB" name="tearDown" finished-at="2025-08-24T13:01:23 WIB" duration-ms="620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLogout status=SUCCESS method=LoginTest.userLogout()[pri:0, instance:com.example.java.testcases.LoginTest@4ed5eb72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.example.java.testcases.LoginTest -->
    </test> <!-- Login-Section-Test  -->
    <test started-at="2025-08-24T13:01:23 WIB" name="PIM-Section-Test" finished-at="2025-08-24T13:02:48 WIB" duration-ms="84331">
      <class name="com.example.java.testcases.PIMTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:01:23 WIB" name="setUp" finished-at="2025-08-24T13:01:34 WIB" duration-ms="10599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.PIMTest.testAddNewEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpPIMPage()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:01:34 WIB" name="setUpPIMPage" finished-at="2025-08-24T13:01:36 WIB" duration-ms="1863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPIMPage -->
        <test-method signature="testAddNewEmployee()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:01:36 WIB" name="testAddNewEmployee" description="Verify adding a new employee" finished-at="2025-08-24T13:01:48 WIB" duration-ms="12600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewEmployee -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:01:49 WIB" name="tearDown" finished-at="2025-08-24T13:01:49 WIB" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddNewEmployee status=SUCCESS method=PIMTest.testAddNewEmployee()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:01:49 WIB" name="setUp" finished-at="2025-08-24T13:01:57 WIB" duration-ms="8461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.PIMTest.testCheckEmployeeOnEmployeeList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpPIMPage()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:01:57 WIB" name="setUpPIMPage" finished-at="2025-08-24T13:02:00 WIB" duration-ms="2587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPIMPage -->
        <test-method signature="testCheckEmployeeOnEmployeeList()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:00 WIB" name="testCheckEmployeeOnEmployeeList" description="Verify employee is displayed on employee list" finished-at="2025-08-24T13:02:02 WIB" duration-ms="2306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckEmployeeOnEmployeeList -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:02 WIB" name="tearDown" finished-at="2025-08-24T13:02:03 WIB" duration-ms="355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckEmployeeOnEmployeeList status=SUCCESS method=PIMTest.testCheckEmployeeOnEmployeeList()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:03 WIB" name="setUp" finished-at="2025-08-24T13:02:12 WIB" duration-ms="8786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.PIMTest.testDeleteEmployeeOnTheEmployeeList()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpPIMPage()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:12 WIB" name="setUpPIMPage" finished-at="2025-08-24T13:02:14 WIB" duration-ms="2615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPIMPage -->
        <test-method signature="testDeleteEmployeeOnTheEmployeeList()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:14 WIB" name="testDeleteEmployeeOnTheEmployeeList" description="Employee data can be deleted from the employee list" finished-at="2025-08-24T13:02:33 WIB" duration-ms="18536" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Employee with first name 'Ronnie' still appears in the list after deletion. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Employee with first name 'Ronnie' still appears in the list after deletion. expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertFalse(Assert.java:79)
at com.example.java.testcases.PIMTest.testDeleteEmployeeOnTheEmployeeList(PIMTest.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteEmployeeOnTheEmployeeList -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:33 WIB" name="tearDown" finished-at="2025-08-24T13:02:33 WIB" duration-ms="540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeleteEmployeeOnTheEmployeeList status=FAILURE method=PIMTest.testDeleteEmployeeOnTheEmployeeList()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:33 WIB" name="setUp" finished-at="2025-08-24T13:02:43 WIB" duration-ms="10016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.example.java.testcases.PIMTest.testNavigateToPIM()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpPIMPage()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:43 WIB" name="setUpPIMPage" finished-at="2025-08-24T13:02:45 WIB" duration-ms="1825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpPIMPage -->
        <test-method signature="testNavigateToPIM()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:45 WIB" name="testNavigateToPIM" description="Verify navigation to PIM page" finished-at="2025-08-24T13:02:47 WIB" duration-ms="1737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigateToPIM -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb]" started-at="2025-08-24T13:02:47 WIB" name="tearDown" finished-at="2025-08-24T13:02:48 WIB" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigateToPIM status=SUCCESS method=PIMTest.testNavigateToPIM()[pri:0, instance:com.example.java.testcases.PIMTest@ee86bcb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.example.java.testcases.PIMTest -->
    </test> <!-- PIM-Section-Test -->
  </suite> <!-- OrangeHRM Automation Suite -->
</testng-results>
